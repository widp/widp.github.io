<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tejaswi&#39;s blog</title>
    <link>https://widp.github.io/blog/</link>
    <description>Recent content on Tejaswi&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Jan 2023 00:00:00 +0530</lastBuildDate><atom:link href="https://widp.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Work Items And Org mode</title>
      <link>https://widp.github.io/blog/posts/azure-work-items-org-mode/</link>
      <pubDate>Thu, 05 Jan 2023 00:00:00 +0530</pubDate>
      
      <guid>https://widp.github.io/blog/posts/azure-work-items-org-mode/</guid>
      <description>The following post is about viewing data from azure work items (ticket id, title etc..) and managing org notes by tagging them.
Setting up az cli &amp;amp; az devops extension for az cli azure has a cli and for azure devops there is an extension .
#after installing azure cli &amp;amp; cli devops extension #login az devops login Viewing tickets in org mode (using az wiql) This snippet does two things</description>
    </item>
    
    <item>
      <title>Disabling SSL while using Git and pip</title>
      <link>https://widp.github.io/blog/posts/ssl_errors_behind_proxy/</link>
      <pubDate>Sat, 16 Jul 2022 00:00:00 +0530</pubDate>
      
      <guid>https://widp.github.io/blog/posts/ssl_errors_behind_proxy/</guid>
      <description>SSL errors If you get errors like :
unable to get local issuer certificate error
or
Failed to connect to github.com port 443 after 21380 ms: Timed out
while using git OR
WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by &amp;lsquo;ConnectTimeoutError
while using pip , It could mean you are behind a corporate proxy. Behind tools such as ZScaler.
A quick fix to this (although not the safest way) is to disable ssl for Git</description>
    </item>
    
    <item>
      <title>Using git with large mono repos</title>
      <link>https://widp.github.io/blog/posts/git_for_mono_repos/</link>
      <pubDate>Thu, 16 Jun 2022 00:00:00 +0530</pubDate>
      
      <guid>https://widp.github.io/blog/posts/git_for_mono_repos/</guid>
      <description>The following approaches can be used to work with large git repositories. Limit large files from being downloaded.
using &amp;lsquo;filter&amp;rsquo; So files such as large binaries, zip files won&amp;rsquo;t be downloaded.
#size in MB git clone --no-checkout --filter=blob:limit=&amp;lt;size&amp;gt; your_git_repo.com Limit git to a set of directories
This can be done using git &amp;lsquo;sparse checkout&amp;rsquo;
#inialize empty git repo mkdir your_git_dir; cd your_git_dir git init # set which sub-directory contents you want git sparse-checkout set --cone input-directory #add remote and do a pull git remote add origin my_git_repo.</description>
    </item>
    
    <item>
      <title>Nvarchar and Nchar oracle db</title>
      <link>https://widp.github.io/blog/posts/nvarchar/</link>
      <pubDate>Fri, 27 May 2022 00:00:00 +0530</pubDate>
      
      <guid>https://widp.github.io/blog/posts/nvarchar/</guid>
      <description>NVARCHAR and NCHAR in oracle Oracle supports multiple charactersets at the same time through its use of the NLS* paramters.
select * from nls_database_parameters where parameter in (&amp;#39;NLS_LENGTH_SEMANTICS&amp;#39;, &amp;#39;NLS_CHARACTERSET&amp;#39;, &amp;#39;NLS_NCHAR_CHARACTERSET&amp;#39;); There are two things to note
The value of NLS_CHARACTERSET The value of NLS_NCHAR_CHARACTERSET on my system the values are the following
NLS_NCHAR_CHARACTERSET = AL16UTF16
NLS_CHARACTERSET = WE8ISO8859P1
If you haven&amp;rsquo;t already guessed from the title of this article, NVARCHAR and NCHAR are two additional data types which behave similar to VARCHAR and CHAR.</description>
    </item>
    
    <item>
      <title>Initializing List with an array in Java</title>
      <link>https://widp.github.io/blog/posts/initializing_java_list/</link>
      <pubDate>Fri, 18 Mar 2022 00:00:00 +0530</pubDate>
      
      <guid>https://widp.github.io/blog/posts/initializing_java_list/</guid>
      <description>Initializing Lists Why is this
List&amp;lt;Integer&amp;gt; a = new List&amp;lt;Integer&amp;gt;({1,2,3}) not possible?
Simple workaround
class ListInit { public static void main(String args[]){ List&amp;lt;Integer&amp;gt; a = Arrays.asList(1,2,3); } } but,
Is it not possible to initialize a List with an array literal?
It is!
That means Arrays.asList() should work with an array literal.
But the below doesn&amp;rsquo;t work.
List&amp;lt;Integer&amp;gt; a = Arrays.asList({1,2,3}); Although this does with the &amp;rsquo;new&amp;rsquo; keyword.
List&amp;lt;Integer&amp;gt; a = Arrays.</description>
    </item>
    
    <item>
      <title>Overview of Parametric Human Body Models</title>
      <link>https://widp.github.io/blog/posts/human_body_models/</link>
      <pubDate>Sat, 05 Mar 2022 00:00:00 +0530</pubDate>
      
      <guid>https://widp.github.io/blog/posts/human_body_models/</guid>
      <description>Problem with anthropometric data see: CAESAR and ANSUR II
They all need to be licensed
A good start to this would be check out the SMPL* body models first they have provided starter code for use with neural network libraries such as tensorflow/pytorch
This blog post describes how to use the code related to these models Overview of SMPL* models and methods This is from one of their youtube videos :</description>
    </item>
    
    <item>
      <title>Ray tracing in a weekend in python</title>
      <link>https://widp.github.io/blog/posts/ray_tracing_in_a_weekend/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0530</pubDate>
      
      <guid>https://widp.github.io/blog/posts/ray_tracing_in_a_weekend/</guid>
      <description>From the book Raytracing in a weekend code adapted to python
emacs configuration emacs (org-babel-do-load-languages &amp;#39;org-babel-load-languages &amp;#39;((python . t))) (setq org-src-preserve-indentation t) helper functions from utilities import point3,color,ray,vec3 import math def dot(vec1, vec2): return (vec1.x * vec2.x + vec1.y * vec2.y + vec1.z * vec2.z ) import math def unit_vector(v): length = math.sqrt(v.x**2+ v.y**2+ v.z**2) return vec3(v.x/length, v.y/length, v.z/length) def ray_color(r): t = hit_sphere(point3(0,0, -1), 0.5, r) if( t &amp;gt; 0.</description>
    </item>
    
  </channel>
</rss>
